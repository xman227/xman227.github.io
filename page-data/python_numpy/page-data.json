{
    "componentChunkName": "component---src-templates-blog-template-js",
    "path": "/python_numpy/",
    "result": {"data":{"cur":{"id":"a30d1ae5-983a-5644-bb25-326487b527ae","html":"<h1 id=\"span-stylebackground-color-fff5b1선형대수-기초-및-numpy-적용span\" style=\"position:relative;\"><a href=\"#span-stylebackground-color-fff5b1%EC%84%A0%ED%98%95%EB%8C%80%EC%88%98-%EA%B8%B0%EC%B4%88-%EB%B0%8F-numpy-%EC%A0%81%EC%9A%A9span\" aria-label=\"span stylebackground color fff5b1선형대수 기초 및 numpy 적용span permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><span style='background-color: #fff5b1'>선형대수 기초 및 numpy 적용</span></h1>\n<p>행렬의 계산, 종류, numpy 내부 메서드를 다룬다.</p>\n<h2 id=\"1-행렬의-계산\" style=\"position:relative;\"><a href=\"#1-%ED%96%89%EB%A0%AC%EC%9D%98-%EA%B3%84%EC%82%B0\" aria-label=\"1 행렬의 계산 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 행렬의 계산</h2>\n<ul>\n<li>행렬</li>\n</ul>\n<p><img src=\"%E1%84%89%E1%85%A5%E1%86%AB%E1%84%92%E1%85%A7%E1%86%BC%E1%84%83%E1%85%A2%E1%84%89%E1%85%AE%20%E1%84%80%E1%85%B5%E1%84%8E%E1%85%A9%20%E1%84%86%E1%85%B5%E1%86%BE%20numpy%20%E1%84%8C%E1%85%A5%E1%86%A8%E1%84%8B%E1%85%AD%E1%86%BC%20d0dad5c623414595a42780f0fea04e8e/Untitled.png\" alt=\"Untitled\"></p>\n<ul>\n<li>행렬 + 행렬</li>\n</ul>\n<p><img src=\"%E1%84%89%E1%85%A5%E1%86%AB%E1%84%92%E1%85%A7%E1%86%BC%E1%84%83%E1%85%A2%E1%84%89%E1%85%AE%20%E1%84%80%E1%85%B5%E1%84%8E%E1%85%A9%20%E1%84%86%E1%85%B5%E1%86%BE%20numpy%20%E1%84%8C%E1%85%A5%E1%86%A8%E1%84%8B%E1%85%AD%E1%86%BC%20d0dad5c623414595a42780f0fea04e8e/Untitled%201.png\" alt=\"Untitled\"></p>\n<ul>\n<li>스칼라 * 행렬</li>\n</ul>\n<p>: 각 자리마다 스칼라를 곱한다</p>\n<p><img src=\"%E1%84%89%E1%85%A5%E1%86%AB%E1%84%92%E1%85%A7%E1%86%BC%E1%84%83%E1%85%A2%E1%84%89%E1%85%AE%20%E1%84%80%E1%85%B5%E1%84%8E%E1%85%A9%20%E1%84%86%E1%85%B5%E1%86%BE%20numpy%20%E1%84%8C%E1%85%A5%E1%86%A8%E1%84%8B%E1%85%AD%E1%86%BC%20d0dad5c623414595a42780f0fea04e8e/Untitled%202.png\" alt=\"Untitled\"></p>\n<ul>\n<li>행렬 * 행렬</li>\n</ul>\n<p><img src=\"%E1%84%89%E1%85%A5%E1%86%AB%E1%84%92%E1%85%A7%E1%86%BC%E1%84%83%E1%85%A2%E1%84%89%E1%85%AE%20%E1%84%80%E1%85%B5%E1%84%8E%E1%85%A9%20%E1%84%86%E1%85%B5%E1%86%BE%20numpy%20%E1%84%8C%E1%85%A5%E1%86%A8%E1%84%8B%E1%85%AD%E1%86%BC%20d0dad5c623414595a42780f0fea04e8e/Untitled%203.png\" alt=\"Untitled\"></p>\n<p><strong>A 의 열 값과 B 의 행 값이 같아야 한다 → A의 행 , B의 열 을 가진 새로운 행렬 탄생</strong></p>\n<p><strong>dot product / 내적 이라고도 표현한다.</strong></p>\n<p>그림을 보면, A(4,2) 와 B(2,3) 이 만나 (4,3) 이 된다.</p>\n<p>곱은 이렇게 이루어진다.</p>\n<p><img src=\"%E1%84%89%E1%85%A5%E1%86%AB%E1%84%92%E1%85%A7%E1%86%BC%E1%84%83%E1%85%A2%E1%84%89%E1%85%AE%20%E1%84%80%E1%85%B5%E1%84%8E%E1%85%A9%20%E1%84%86%E1%85%B5%E1%86%BE%20numpy%20%E1%84%8C%E1%85%A5%E1%86%A8%E1%84%8B%E1%85%AD%E1%86%BC%20d0dad5c623414595a42780f0fea04e8e/GIF_2022-08-08_%25EC%2598%25A4%25ED%259B%2584_1-32-17.gif\" alt=\"GIF 2022-08-08 오후 1-32-17.gif\"></p>\n<p><code class=\"language-text\">1*3 + 0*2 + 2*1</code></p>\n<p>다음의 계산을 2 x 2 번 반복해서 2열 2행의 값이 나온다,</p>\n<h2 id=\"2-행렬의-종류\" style=\"position:relative;\"><a href=\"#2-%ED%96%89%EB%A0%AC%EC%9D%98-%EC%A2%85%EB%A5%98\" aria-label=\"2 행렬의 종류 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 행렬의 종류</h2>\n<ul>\n<li>전치 행렬</li>\n</ul>\n<p>: 행과 열이 바뀐 행렬</p>\n<p><img src=\"%E1%84%89%E1%85%A5%E1%86%AB%E1%84%92%E1%85%A7%E1%86%BC%E1%84%83%E1%85%A2%E1%84%89%E1%85%AE%20%E1%84%80%E1%85%B5%E1%84%8E%E1%85%A9%20%E1%84%86%E1%85%B5%E1%86%BE%20numpy%20%E1%84%8C%E1%85%A5%E1%86%A8%E1%84%8B%E1%85%AD%E1%86%BC%20d0dad5c623414595a42780f0fea04e8e/Untitled%204.png\" alt=\"Untitled\"></p>\n<p>전치행렬의 성질</p>\n<p><img src=\"%E1%84%89%E1%85%A5%E1%86%AB%E1%84%92%E1%85%A7%E1%86%BC%E1%84%83%E1%85%A2%E1%84%89%E1%85%AE%20%E1%84%80%E1%85%B5%E1%84%8E%E1%85%A9%20%E1%84%86%E1%85%B5%E1%86%BE%20numpy%20%E1%84%8C%E1%85%A5%E1%86%A8%E1%84%8B%E1%85%AD%E1%86%BC%20d0dad5c623414595a42780f0fea04e8e/Untitled%205.png\" alt=\"Untitled\"></p>\n<ul>\n<li>영행렬</li>\n</ul>\n<p><img src=\"%E1%84%89%E1%85%A5%E1%86%AB%E1%84%92%E1%85%A7%E1%86%BC%E1%84%83%E1%85%A2%E1%84%89%E1%85%AE%20%E1%84%80%E1%85%B5%E1%84%8E%E1%85%A9%20%E1%84%86%E1%85%B5%E1%86%BE%20numpy%20%E1%84%8C%E1%85%A5%E1%86%A8%E1%84%8B%E1%85%AD%E1%86%BC%20d0dad5c623414595a42780f0fea04e8e/Untitled%206.png\" alt=\"Untitled\"></p>\n<p>R 은 실수(real)</p>\n<ul>\n<li>단위 행렬</li>\n</ul>\n<p>: 대각선만 1인 행렬</p>\n<p>기호는 I, E 둘 다 쓴다.</p>\n<p><img src=\"%E1%84%89%E1%85%A5%E1%86%AB%E1%84%92%E1%85%A7%E1%86%BC%E1%84%83%E1%85%A2%E1%84%89%E1%85%AE%20%E1%84%80%E1%85%B5%E1%84%8E%E1%85%A9%20%E1%84%86%E1%85%B5%E1%86%BE%20numpy%20%E1%84%8C%E1%85%A5%E1%86%A8%E1%84%8B%E1%85%AD%E1%86%BC%20d0dad5c623414595a42780f0fea04e8e/Untitled%207.png\" alt=\"Untitled\"></p>\n<ul>\n<li>대각 행렬</li>\n</ul>\n<p>: 대각선만 특정 수로 채워진 행렬 (특정 수는 행마다 다를 수 있음. )</p>\n<p><img src=\"%E1%84%89%E1%85%A5%E1%86%AB%E1%84%92%E1%85%A7%E1%86%BC%E1%84%83%E1%85%A2%E1%84%89%E1%85%AE%20%E1%84%80%E1%85%B5%E1%84%8E%E1%85%A9%20%E1%84%86%E1%85%B5%E1%86%BE%20numpy%20%E1%84%8C%E1%85%A5%E1%86%A8%E1%84%8B%E1%85%AD%E1%86%BC%20d0dad5c623414595a42780f0fea04e8e/Untitled%208.png\" alt=\"Untitled\"></p>\n<h2 id=\"3-matmul-과-dot-의-차이\" style=\"position:relative;\"><a href=\"#3-matmul-%EA%B3%BC-dot-%EC%9D%98-%EC%B0%A8%EC%9D%B4\" aria-label=\"3 matmul 과 dot 의 차이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. matmul 과 dot 의 차이</h2>\n<p><img src=\"%E1%84%89%E1%85%A5%E1%86%AB%E1%84%92%E1%85%A7%E1%86%BC%E1%84%83%E1%85%A2%E1%84%89%E1%85%AE%20%E1%84%80%E1%85%B5%E1%84%8E%E1%85%A9%20%E1%84%86%E1%85%B5%E1%86%BE%20numpy%20%E1%84%8C%E1%85%A5%E1%86%A8%E1%84%8B%E1%85%AD%E1%86%BC%20d0dad5c623414595a42780f0fea04e8e/Untitled%209.png\" alt=\"Untitled\"></p>\n<p>→ 다시 말해서</p>\n<p><code class=\"language-text\">matmul()</code> : 맨 마지막 두 행의 l x m , m x k ⇒ l x k 로 만든다 : 차원 수는 동일해진다</p>\n<p><code class=\"language-text\">dot</code> : A 의 맨 마지막 차원 수 m 과 B 의 마지막에서 두번째 차원 수 m 를 없앤다. 결국 차원이 늘어난다.</p>\n<h2 id=\"4-linspace-와-arrange-의-차이\" style=\"position:relative;\"><a href=\"#4-linspace-%EC%99%80-arrange-%EC%9D%98-%EC%B0%A8%EC%9D%B4\" aria-label=\"4 linspace 와 arrange 의 차이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. linspace 와 arrange 의 차이</h2>\n<p><strong>arange() 함수에서는 간격을 지정</strong></p>\n<p><strong>linspace()함수에서는 구간의 개수를 지정</strong></p>\n<p><img src=\"%E1%84%89%E1%85%A5%E1%86%AB%E1%84%92%E1%85%A7%E1%86%BC%E1%84%83%E1%85%A2%E1%84%89%E1%85%AE%20%E1%84%80%E1%85%B5%E1%84%8E%E1%85%A9%20%E1%84%86%E1%85%B5%E1%86%BE%20numpy%20%E1%84%8C%E1%85%A5%E1%86%A8%E1%84%8B%E1%85%AD%E1%86%BC%20d0dad5c623414595a42780f0fea04e8e/Untitled%2010.png\" alt=\"Untitled\"></p>\n<p>arrange 는 어느 step 만큼 수를 키울 것인지 를 파라미터로 받는다</p>\n<p>linspace 는 start - end 사이에 들어갈 숫자의 개수를 파라미터로 받는다</p>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#1-%ED%96%89%EB%A0%AC%EC%9D%98-%EA%B3%84%EC%82%B0\">1. 행렬의 계산</a></li>\n<li><a href=\"#2-%ED%96%89%EB%A0%AC%EC%9D%98-%EC%A2%85%EB%A5%98\">2. 행렬의 종류</a></li>\n<li><a href=\"#3-matmul-%EA%B3%BC-dot-%EC%9D%98-%EC%B0%A8%EC%9D%B4\">3. matmul 과 dot 의 차이</a></li>\n<li><a href=\"#4-linspace-%EC%99%80-arrange-%EC%9D%98-%EC%B0%A8%EC%9D%B4\">4. linspace 와 arrange 의 차이</a></li>\n</ul>\n</div>","excerpt":"선형대수 기초 및 numpy 적용 행렬의 계산, 종류, numpy 내부 메서드를 다룬다. 1. 행렬의 계산 행렬 Untitled 행렬 + 행렬 Untitled 스칼라 * 행렬 : 각 자리마다 스칼라를 곱한다 Untitled 행렬 * 행렬 Untitled A 의 열 값과 B 의 행 값이 같아야 한다 → A의 행 , B의 열 을 가진 새로운 행렬 탄생 dot product / 내적 이라고도 표현한다. 그림을 보면, A(4,2) 와 B(2,3) 이 만나 (4,3) 이 된다. 곱은 이렇게 이루어진다. GIF 2022-08-08 오후 1-32-17.gif  다음의 계산을 2 x 2 번 반복해서 2열 2행의 값이 나온다, 2. 행렬의 종류 전치 행렬 : 행과 열이 바뀐 행렬 Untitled 전치행렬의 성질 Untitled 영행렬 Untitled R 은 실수(real) 단위 행렬 : 대각선만 1인 행렬 기호는 I, E 둘 다 쓴다. Untitled 대각 행렬 : 대각선만 특정 수로 채워진 행렬…","frontmatter":{"date":"January 10, 2023","title":"선형대수와 넘파이","categories":"python","author":"하성민","emoji":"📃"},"fields":{"slug":"/python_numpy/"}},"next":{"id":"ee3f2374-e7be-5ada-b699-6495362dfb81","html":"<h1 id=\"re\" style=\"position:relative;\"><a href=\"#re\" aria-label=\"re permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Re</h1>\n<h2 id=\"1-기초-문법\" style=\"position:relative;\"><a href=\"#1-%EA%B8%B0%EC%B4%88-%EB%AC%B8%EB%B2%95\" aria-label=\"1 기초 문법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 기초 문법</h2>\n<p>[ ]\n이 안에있는건 그대로 들어간다</p>\n<p>[a-zA-Z] 알파벳 전부<br>\n[0-10] 숫자 전부<br>\n[.?,!] 이건그냥 쓴거 그대로를 의미한다</p>\n<hr>\n<p>a.b 여기서 .은 모든 문자를 의미함\n대신 문자가 하나라도 들어는 가야함</p>\n<hr>\n<p>a* b 이거는 바로 앞 문자 a 가 무한대로 반복된다는 의미<br>\n이건 a가 0번 반복되는것도 포함이다</p>\n<p>ca* b 이런것도 a 만 포함하는거다 c는 제외다.</p>\n<hr>\n<p>ca+t 이거는 최소 1번 이상은 반복해야 한다</p>\n<hr>\n<p>{} 이거는 반복횟수 고정<br>\na{m,n} 이거는 a가 m~n번만 반복해야 한다.</p>\n<p>그런의미에서 a* 는 a{0,} 와 같고<br>\na+ 는 a{1,} 와 같다</p>\n<p>특정 반복수 n 은 a{n} 으로 하면 된다</p>\n<hr>\n<p>? 는 {0,1} 을 의미한다.<br>\nca?t 은 a가 없거나 1번만 있으면 된다.</p>\n<hr>\n<p>^ 문자열의 처음  , ^python : 무조건 시작이 python 이어야 함<br>\n문자열의 마지막  python $</p>\n<hr>\n<p>\\d 숫자와 매치  \\D 반대<br>\n\\s 공백과 매치 [ \\t\\n\\r\\f\\v] 와 동일 \\S 반대<br>\n\\w 문자+숫자 매치 [^a-zA-Z0-9_] 와 동일 \\W 반대<br>\n근데 이걸 쓸라면 앞에 r을 붙여야 하는 듯</p>\n<p>r” : 그 안의 것이 위의 저 약속이 아닌  raw데이터임을 나타내주는 문법</p>\n<h2 id=\"2-사용법\" style=\"position:relative;\"><a href=\"#2-%EC%82%AC%EC%9A%A9%EB%B2%95\" aria-label=\"2 사용법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 사용법</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> re\n\np <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[a-z]+'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>compile 메서드를 사용해 정규 표현식을 컴파일.</p>\n<p>컴파일된 re 객체는 다음과 같은 메서드 사용 가능</p>\n<p>match() : 처음부터 순서대로 매치 (match객체)  (뒤에 있어도 처음에 없으면 막힘)<br>\nsearch() : 문자열 전체 매치 (match객체)<br>\nfindall() : 매치되는 모든 문자열을 list로 반환<br>\nfiniter() : 매치되는 모든 문자열을 반복가능한 match 개체로 반환</p>\n<hr>\n<p>group() 매치된 문자열을 반환<br>\nstart() 매치된 문자열의 시작 위치를 반환<br>\nend() 매치된 문자열의 끝 위치 반환<br>\nspan() 매치된 문자열의 (시작,끝) 을 튜플로 반환</p>\n<p>예시)</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">m <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">\"3 python\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">m</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;re.Match object; span=(2, 8), match='python'></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">m<span class=\"token punctuation\">.</span>group<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">'python'</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">m<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">2</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">m<span class=\"token punctuation\">.</span>span<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(2, 8)</code></pre></div>\n<p>이걸 한 줄로 할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">m <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span><span class=\"token keyword\">match</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[a-z]+'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'3 python'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>앞에 컴파일할 정규표현식, 그리고 뒤에 검색할 데이터를 넣으면 된다.</p>","frontmatter":{"date":"June 01, 2022","title":"Re 정규화 라이브러리 사용법","categories":"Python","author":"하성민","emoji":"✒️"},"fields":{"slug":"/python_re/"}},"prev":null,"site":{"siteMetadata":{"siteUrl":"https://xman227.github.io","comments":{"utterances":{"repo":"xman227/blog_comments"}}}}},"pageContext":{"slug":"/python_numpy/","nextSlug":"/python_re/","prevSlug":""}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}